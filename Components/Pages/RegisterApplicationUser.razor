@page "/register-application-user"
@attribute [Authorize]
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject DialogService DialogService
@inject ContextMenuService ContextMenuService
@inject TooltipService TooltipService
@inject NotificationService NotificationService

<PageTitle>Register Application User</PageTitle>
<RadzenRow>
    <RadzenColumn SizeMD="12">
        <RadzenTemplateForm Data="@user" TItem="DatingApp.Client.Models.ApplicationUser"
            Visible="@(user != null)" Submit="@FormSubmit">
            <RadzenAlert Shade="Shade.Lighter" Variant="Variant.Flat" Size="AlertSize.Small" AlertStyle="AlertStyle.Danger" Visible="@errorVisible">@error</RadzenAlert>

            <RadzenStack style="margin-bottom: 1rem;">
                <RadzenFormField Text="Email" Variant="Variant.Filled">
                    <ChildContent>
                        <RadzenTextBox style="display: block; width: 100%" @bind-Value="@(user.Email)" Name="UserName" />
                    </ChildContent>
                    <Helper>
                        <RadzenRequiredValidator Component="UserName" Text="Email is required" />
                    </Helper>
                </RadzenFormField>
                <RadzenFormField Text="Password" Variant="Variant.Filled">
                    <ChildContent>
                        <RadzenPassword @bind-Value="@(user.Password)" style="display: block; width: 100%" Name="Password" />
                    </ChildContent>
                    <Helper>
                        <RadzenRequiredValidator Component="Password" Text="Password is required" />
                    </Helper>
                </RadzenFormField>
                <RadzenFormField Text="Confirm Password" Variant="Variant.Filled">
                    <ChildContent>
                        <RadzenPassword style="display: block; width: 100%" @bind-Value="@(user.ConfirmPassword)" Name="ConfirmPassword" />
                    </ChildContent>
                    <Helper>
                        <RadzenRequiredValidator Component="ConfirmPassword" Text="ConfirmPassword is required" />
                    </Helper>
                </RadzenFormField>
            </RadzenStack>
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.5rem">
                    <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Register" IsBusy="@isBusy" BusyText="Registering ..." Variant="Variant.Flat" />
                    <RadzenButton ButtonStyle="ButtonStyle.Light" Text="Cancel" Click="@CancelClick" Variant="Variant.Flat" />
            </RadzenStack>
        </RadzenTemplateForm>
    </RadzenColumn>
</RadzenRow>
@code {
        protected DatingApp.Client.Models.ApplicationUser user;
        protected bool isBusy;
        protected bool errorVisible;
        protected string error;

        [Inject]
        protected SecurityService Security { get; set; }

        protected override async Task OnInitializedAsync()
        {
            user = new DatingApp.Client.Models.ApplicationUser();
        }

        protected async Task FormSubmit()
        {
            try
            {
                isBusy = true;

                await Security.Register(user.Email, user.Password);

                DialogService.Close(true);
            }
            catch (Exception ex)
            {
                errorVisible = true;
                error = ex.Message;
            }

            isBusy = false;
        }

        protected async Task CancelClick()
        {
            DialogService.Close(false);
        }
}
