@page "/add-application-tenant"
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject DialogService DialogService
@inject ContextMenuService ContextMenuService
@inject TooltipService TooltipService
@inject NotificationService NotificationService
@attribute [Authorize]

<RadzenRow>
    <RadzenColumn SizeMD="12">
        <RadzenTemplateForm TItem="DatingApp.Client.Models.ApplicationTenant" Data="@tenant" Visible="@(tenant != null)" Submit="@FormSubmit">
            <RadzenAlert Title="Cannot create tenant" Shade="Shade.Lighter" Variant="Variant.Flat" Size="AlertSize.Small" AlertStyle="AlertStyle.Danger" Visible="@errorVisible">@error</RadzenAlert>

            <RadzenStack style="margin-bottom: 1rem;">
                <RadzenFormField Text="Name" Variant="Variant.Filled">
                    <ChildContent>
                        <RadzenTextBox style="width: 100%" @bind-Value="@(tenant.Name)" Name="Name" />
                    </ChildContent>
                    <Helper>
                        <RadzenRequiredValidator Component="Name" Text="Name is required" />
                    </Helper>
                </RadzenFormField>
                <RadzenFormField Text="Hosts" Variant="Variant.Filled">
                    <ChildContent>
                        <RadzenTextBox style="width: 100%" @bind-Value="@(tenant.Hosts)" Name="Hosts" />
                    </ChildContent>
                    <Helper>
                        <RadzenRequiredValidator Component="Hosts" Text="Hosts is required" />
                    </Helper>
                </RadzenFormField>
            </RadzenStack>    
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.5rem">
                    <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Save" Variant="Variant.Flat" />
                    <RadzenButton ButtonStyle="ButtonStyle.Light" Text="Cancel" Click="@CancelClick" Variant="Variant.Flat" />
            </RadzenStack>
        </RadzenTemplateForm>
    </RadzenColumn>
</RadzenRow>
@code {
        protected DatingApp.Client.Models.ApplicationTenant tenant;
        protected string error;
        protected bool errorVisible;

        [Inject]
        protected SecurityService Security { get; set; }

        protected override async Task OnInitializedAsync()
        {
            tenant = new DatingApp.Client.Models.ApplicationTenant();
        }

        protected async Task FormSubmit(DatingApp.Client.Models.ApplicationTenant tenant)
        {
            try
            {
                await Security.CreateTenant(tenant);

                DialogService.Close(null);
            }
            catch (Exception ex)
            {
                errorVisible = true;
                error = ex.Message;
            }
        }

        protected async Task CancelClick()
        {
            DialogService.Close(null);
        }
}
