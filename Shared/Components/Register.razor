@inject IAuthService AuthService
@inject NavigationManager Navigation

@using Microsoft.AspNetCore.Components.Forms
<EditForm Model="@registerModel" OnValidSubmit="@HandleRegister">
    <!-- Form fields remain unchanged -->
    <MudButton Color="Color.Primary" Variant="Variant.Filled" Type="Submit">Register</MudButton>
</EditForm>

@if (authResult != null)
{
    <MudAlert Severity="Severity.Error">@authResult.Message</MudAlert>
}

@code {
    private RegisterModel? registerModel = new RegisterModel
        {
            FirstName = "",
            LastName = "",
            NickName = "",
            Email = "",
            PhoneNumber = "",
            Password = "",
            ConfirmPassword = ""
        };
    private AuthResult? authResult;

    private async Task HandleRegister()
    {
        try
        {
            if (registerModel == null)
            {
                throw new InvalidOperationException("Register model is null");
            }

            authResult = await AuthService.Register(registerModel);
            if (authResult != null && authResult.Success)
            {
                Navigation.NavigateTo("/dashboard");
            }
        }
        catch (Exception)
        {
            authResult = new AuthResult { Success = false, Message = "An unexpected error occurred. Please try again." };
            // Log the exception
        }
    }
}
