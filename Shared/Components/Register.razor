@inject IAuthService AuthService
@inject NavigationManager Navigation

@using Microsoft.AspNetCore.Components.Forms

<EditForm Model="@registerModel" OnValidSubmit="@HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <MudTextField T="string" Label="First Name" @bind-Value="registerModel.FirstName" />
    <MudTextField T="string" Label="Last Name" @bind-Value="registerModel.LastName" />
    <MudTextField T="string" Label="Nick Name" @bind-Value="registerModel.NickName" />
    <MudTextField T="string" Label="Email" @bind-Value="registerModel.Email" />
    <MudTextField T="string" Label="Phone Number" @bind-Value="registerModel.PhoneNumber" />
    <MudTextField T="string" Label="Password" InputType="InputType.Password" @bind-Value="registerModel.Password" />
    <MudTextField T="string" Label="Confirm Password" InputType="InputType.Password" @bind-Value="registerModel.ConfirmPassword" />
    <MudButton Color="Color.Primary" Variant="Variant.Filled" Type="Submit">Register</MudButton>
</EditForm>

@if (authResult != null)
{
    <MudAlert Severity="Severity.Error">@authResult.Message</MudAlert>
}

@code {
    private RegisterModel registerModel = new RegisterModel();
    private AuthResult? authResult;

    private async Task HandleRegister()
    {
        if (registerModel.Password != registerModel.ConfirmPassword)
        {
            authResult = new AuthResult { Success = false, Message = "Passwords do not match." };
            return;
        }

        authResult = await AuthService.Register(registerModel);
        if (authResult.Success)
        {
            Navigation.NavigateTo("/login");
        }
    }
}
